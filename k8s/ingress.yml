---
# 创建Namespace，所有的动作和资源都隔离在这个命名空间
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-ingress-v1

---
# 创建ServiceAccount，包含一组Pod用于访问API Server，to get or update cluster state
apiVersion: v1
kind: ServiceAccount
metadata:
  name: service-account
  namespace: gateway-ingress-v1

---
# 创建ClusterRole，用于指定一组cluster级别的权限
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-role
rules:
  - apiGroups: [""]
    resources: ["endpoints", "services", "pods"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "watch", "list"]

---
# 创建ClusterRoleBinding，绑定who(service account) can do what(cluster role)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-role
subjects:
- kind: ServiceAccount
  name: service-account
  namespace: gateway-ingress-v1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-as-ingress
  namespace: gateway-ingress-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway-as-ingress
  template:
    metadata:
      labels:
        app: gateway-as-ingress
    spec:
      serviceAccountName: service-account
      containers:
      - image: zhaodockerhub/gateway-as-ingress:v2.1
        imagePullPolicy: Always
        name: gateway-as-ingress
        ports:
        - containerPort: 8080
        env:
        - name: LOGGING_LEVEL_ROOT
          value: TRACE
        resources:
          limits:
            memory: "300Mi"
          requests:
            memory: "300Mi"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 180
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 3

---
kind: Service
apiVersion: v1
metadata:
  name: gateway-as-ingress
  namespace: gateway-ingress-v1
  labels:
    app: gateway-as-ingress
spec:
  selector:
    app: gateway-as-ingress
  ports:
  - protocol: TCP
    port: 8080
    name: http
